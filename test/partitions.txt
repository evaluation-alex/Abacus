Abacus.Partitions (VERSION = 0.5.0)
---
o = Abacus.Partition(8)
o.total()
22
o.next()
[ 1, 1, 1, 1, 1, 1, 1, 1 ]
o.hasNext()
true
o.next()
[ 2, 1, 1, 1, 1, 1, 1 ]
default order is "lex", lexicographic-order
o.rewind()
[ 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 2, 1, 1, 1, 1, 1, 1 ]
[ 2, 2, 1, 1, 1, 1 ]
[ 2, 2, 2, 1, 1 ]
[ 2, 2, 2, 2 ]
[ 3, 1, 1, 1, 1, 1 ]
[ 3, 2, 1, 1, 1 ]
[ 3, 2, 2, 1 ]
[ 3, 3, 1, 1 ]
[ 3, 3, 2 ]
[ 4, 1, 1, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 4, 2, 2 ]
[ 4, 3, 1 ]
[ 4, 4 ]
[ 5, 1, 1, 1 ]
[ 5, 2, 1 ]
[ 5, 3 ]
[ 6, 1, 1 ]
[ 6, 2 ]
[ 7, 1 ]
[ 8 ]
backwards
o.forward()
[ 8 ]
[ 7, 1 ]
[ 6, 2 ]
[ 6, 1, 1 ]
[ 5, 3 ]
[ 5, 2, 1 ]
[ 5, 1, 1, 1 ]
[ 4, 4 ]
[ 4, 3, 1 ]
[ 4, 2, 2 ]
[ 4, 2, 1, 1 ]
[ 4, 1, 1, 1, 1 ]
[ 3, 3, 2 ]
[ 3, 3, 1, 1 ]
[ 3, 2, 2, 1 ]
[ 3, 2, 1, 1, 1 ]
[ 3, 1, 1, 1, 1, 1 ]
[ 2, 2, 2, 2 ]
[ 2, 2, 2, 1, 1 ]
[ 2, 2, 1, 1, 1, 1 ]
[ 2, 1, 1, 1, 1, 1, 1 ]
[ 1, 1, 1, 1, 1, 1, 1, 1 ]
o.dispose()
