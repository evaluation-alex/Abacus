Abacus.Permutations (VERSION = 0.7.5)
---
o = Abacus.Permutation(4)
o.dimension()
4
o.total()
24
o.next()
[ 0, 1, 2, 3 ]
o.hasNext()
true
o.next()
[ 0, 1, 3, 2 ]
default order is "lex", lexicographic-order
o.rewind()
[ [ 0, 1, 2, 3 ],
  'index          : 0',
  'rank           : 0',
  'unrank         : 0,1,2,3',
  'is_permutation : yes',
  'is_identity    : yes',
  'is_derangement : no',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 0, 1, 3, 2 ],
  'index          : 1',
  'rank           : 1',
  'unrank         : 0,1,3,2',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 0, 2, 1, 3 ],
  'index          : 2',
  'rank           : 2',
  'unrank         : 0,2,1,3',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 0, 2, 3, 1 ],
  'index          : 3',
  'rank           : 3',
  'unrank         : 0,2,3,1',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : no' ]
[ [ 0, 3, 1, 2 ],
  'index          : 4',
  'rank           : 4',
  'unrank         : 0,3,1,2',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : no' ]
[ [ 0, 3, 2, 1 ],
  'index          : 5',
  'rank           : 5',
  'unrank         : 0,3,2,1',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 1, 0, 2, 3 ],
  'index          : 6',
  'rank           : 6',
  'unrank         : 1,0,2,3',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 1, 0, 3, 2 ],
  'index          : 7',
  'rank           : 7',
  'unrank         : 1,0,3,2',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 1, 2, 0, 3 ],
  'index          : 8',
  'rank           : 8',
  'unrank         : 1,2,0,3',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : no' ]
[ [ 1, 2, 3, 0 ],
  'index          : 9',
  'rank           : 9',
  'unrank         : 1,2,3,0',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 1, 3, 0, 2 ],
  'index          : 10',
  'rank           : 10',
  'unrank         : 1,3,0,2',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 1, 3, 2, 0 ],
  'index          : 11',
  'rank           : 11',
  'unrank         : 1,3,2,0',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 2, 0, 1, 3 ],
  'index          : 12',
  'rank           : 12',
  'unrank         : 2,0,1,3',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : no' ]
[ [ 2, 0, 3, 1 ],
  'index          : 13',
  'rank           : 13',
  'unrank         : 2,0,3,1',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 2, 1, 0, 3 ],
  'index          : 14',
  'rank           : 14',
  'unrank         : 2,1,0,3',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 2, 1, 3, 0 ],
  'index          : 15',
  'rank           : 15',
  'unrank         : 2,1,3,0',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 2, 3, 0, 1 ],
  'index          : 16',
  'rank           : 16',
  'unrank         : 2,3,0,1',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 2, 3, 1, 0 ],
  'index          : 17',
  'rank           : 17',
  'unrank         : 2,3,1,0',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : no',
  'is_connected   : no' ]
[ [ 3, 0, 1, 2 ],
  'index          : 18',
  'rank           : 18',
  'unrank         : 3,0,1,2',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 3, 0, 2, 1 ],
  'index          : 19',
  'rank           : 19',
  'unrank         : 3,0,2,1',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 3, 1, 0, 2 ],
  'index          : 20',
  'rank           : 20',
  'unrank         : 3,1,0,2',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : no',
  'is_connected   : yes' ]
[ [ 3, 1, 2, 0 ],
  'index          : 21',
  'rank           : 21',
  'unrank         : 3,1,2,0',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : no',
  'is_involution  : yes',
  'is_connected   : no' ]
[ [ 3, 2, 0, 1 ],
  'index          : 22',
  'rank           : 22',
  'unrank         : 3,2,0,1',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : no',
  'is_connected   : no' ]
[ [ 3, 2, 1, 0 ],
  'index          : 23',
  'rank           : 23',
  'unrank         : 3,2,1,0',
  'is_permutation : yes',
  'is_identity    : no',
  'is_derangement : yes',
  'is_involution  : yes',
  'is_connected   : no' ]
backwards
o.rewind(-1)
[ 3, 2, 1, 0 ]
[ 3, 2, 0, 1 ]
[ 3, 1, 2, 0 ]
[ 3, 1, 0, 2 ]
[ 3, 0, 2, 1 ]
[ 3, 0, 1, 2 ]
[ 2, 3, 1, 0 ]
[ 2, 3, 0, 1 ]
[ 2, 1, 3, 0 ]
[ 2, 1, 0, 3 ]
[ 2, 0, 3, 1 ]
[ 2, 0, 1, 3 ]
[ 1, 3, 2, 0 ]
[ 1, 3, 0, 2 ]
[ 1, 2, 3, 0 ]
[ 1, 2, 0, 3 ]
[ 1, 0, 3, 2 ]
[ 1, 0, 2, 3 ]
[ 0, 3, 2, 1 ]
[ 0, 3, 1, 2 ]
[ 0, 2, 3, 1 ]
[ 0, 2, 1, 3 ]
[ 0, 1, 3, 2 ]
[ 0, 1, 2, 3 ]
o.order("lex,reflected")
[ 3, 2, 1, 0 ]
[ 2, 3, 1, 0 ]
[ 3, 1, 2, 0 ]
[ 1, 3, 2, 0 ]
[ 2, 1, 3, 0 ]
[ 1, 2, 3, 0 ]
[ 3, 2, 0, 1 ]
[ 2, 3, 0, 1 ]
[ 3, 0, 2, 1 ]
[ 0, 3, 2, 1 ]
[ 2, 0, 3, 1 ]
[ 0, 2, 3, 1 ]
[ 3, 1, 0, 2 ]
[ 1, 3, 0, 2 ]
[ 3, 0, 1, 2 ]
[ 0, 3, 1, 2 ]
[ 1, 0, 3, 2 ]
[ 0, 1, 3, 2 ]
[ 2, 1, 0, 3 ]
[ 1, 2, 0, 3 ]
[ 2, 0, 1, 3 ]
[ 0, 2, 1, 3 ]
[ 1, 0, 2, 3 ]
[ 0, 1, 2, 3 ]
o.order("lex,reversed")
[ 3, 2, 1, 0 ]
[ 3, 2, 0, 1 ]
[ 3, 1, 2, 0 ]
[ 3, 1, 0, 2 ]
[ 3, 0, 2, 1 ]
[ 3, 0, 1, 2 ]
[ 2, 3, 1, 0 ]
[ 2, 3, 0, 1 ]
[ 2, 1, 3, 0 ]
[ 2, 1, 0, 3 ]
[ 2, 0, 3, 1 ]
[ 2, 0, 1, 3 ]
[ 1, 3, 2, 0 ]
[ 1, 3, 0, 2 ]
[ 1, 2, 3, 0 ]
[ 1, 2, 0, 3 ]
[ 1, 0, 3, 2 ]
[ 1, 0, 2, 3 ]
[ 0, 3, 2, 1 ]
[ 0, 3, 1, 2 ]
[ 0, 2, 3, 1 ]
[ 0, 2, 1, 3 ]
[ 0, 1, 3, 2 ]
[ 0, 1, 2, 3 ]
o.order("colex")
[ 3, 2, 1, 0 ]
[ 2, 3, 1, 0 ]
[ 3, 1, 2, 0 ]
[ 1, 3, 2, 0 ]
[ 2, 1, 3, 0 ]
[ 1, 2, 3, 0 ]
[ 3, 2, 0, 1 ]
[ 2, 3, 0, 1 ]
[ 3, 0, 2, 1 ]
[ 0, 3, 2, 1 ]
[ 2, 0, 3, 1 ]
[ 0, 2, 3, 1 ]
[ 3, 1, 0, 2 ]
[ 1, 3, 0, 2 ]
[ 3, 0, 1, 2 ]
[ 0, 3, 1, 2 ]
[ 1, 0, 3, 2 ]
[ 0, 1, 3, 2 ]
[ 2, 1, 0, 3 ]
[ 1, 2, 0, 3 ]
[ 2, 0, 1, 3 ]
[ 0, 2, 1, 3 ]
[ 1, 0, 2, 3 ]
[ 0, 1, 2, 3 ]
o.order("colex,reflected")
[ 0, 1, 2, 3 ]
[ 0, 1, 3, 2 ]
[ 0, 2, 1, 3 ]
[ 0, 2, 3, 1 ]
[ 0, 3, 1, 2 ]
[ 0, 3, 2, 1 ]
[ 1, 0, 2, 3 ]
[ 1, 0, 3, 2 ]
[ 1, 2, 0, 3 ]
[ 1, 2, 3, 0 ]
[ 1, 3, 0, 2 ]
[ 1, 3, 2, 0 ]
[ 2, 0, 1, 3 ]
[ 2, 0, 3, 1 ]
[ 2, 1, 0, 3 ]
[ 2, 1, 3, 0 ]
[ 2, 3, 0, 1 ]
[ 2, 3, 1, 0 ]
[ 3, 0, 1, 2 ]
[ 3, 0, 2, 1 ]
[ 3, 1, 0, 2 ]
[ 3, 1, 2, 0 ]
[ 3, 2, 0, 1 ]
[ 3, 2, 1, 0 ]
o.order("colex,reversed")
[ 0, 1, 2, 3 ]
[ 1, 0, 2, 3 ]
[ 0, 2, 1, 3 ]
[ 2, 0, 1, 3 ]
[ 1, 2, 0, 3 ]
[ 2, 1, 0, 3 ]
[ 0, 1, 3, 2 ]
[ 1, 0, 3, 2 ]
[ 0, 3, 1, 2 ]
[ 3, 0, 1, 2 ]
[ 1, 3, 0, 2 ]
[ 3, 1, 0, 2 ]
[ 0, 2, 3, 1 ]
[ 2, 0, 3, 1 ]
[ 0, 3, 2, 1 ]
[ 3, 0, 2, 1 ]
[ 2, 3, 0, 1 ]
[ 3, 2, 0, 1 ]
[ 1, 2, 3, 0 ]
[ 2, 1, 3, 0 ]
[ 1, 3, 2, 0 ]
[ 3, 1, 2, 0 ]
[ 2, 3, 1, 0 ]
[ 3, 2, 1, 0 ]
o.order("random")
[ 2, 1, 3, 0 ]
[ 0, 1, 3, 2 ]
[ 2, 3, 0, 1 ]
[ 0, 3, 2, 1 ]
[ 1, 3, 2, 0 ]
[ 1, 0, 3, 2 ]
[ 2, 3, 1, 0 ]
[ 1, 3, 0, 2 ]
[ 2, 0, 1, 3 ]
[ 3, 0, 2, 1 ]
[ 1, 2, 0, 3 ]
[ 0, 1, 2, 3 ]
[ 3, 2, 1, 0 ]
[ 0, 2, 1, 3 ]
[ 3, 2, 0, 1 ]
[ 1, 0, 2, 3 ]
[ 1, 2, 3, 0 ]
[ 2, 0, 3, 1 ]
[ 2, 1, 0, 3 ]
[ 3, 1, 2, 0 ]
[ 0, 3, 1, 2 ]
[ 3, 0, 1, 2 ]
[ 3, 1, 0, 2 ]
[ 0, 2, 3, 1 ]
o.random()
[ 0, 1, 3, 2 ]
o.order("colex").range(-5, -1)
[ 1, 2, 0, 3 ]
[ 2, 0, 1, 3 ]
[ 0, 2, 1, 3 ]
[ 1, 0, 2, 3 ]
[ 0, 1, 2, 3 ]
o.dispose()
